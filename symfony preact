/** Utiliser symfony et preact sans configuration spécial sur webpack

webpack.config.js
.enablePreactPreset()

Installer:
- @babel/plugin-transform-react-jsx 
- preact

Créer un fichier jsx pour le component:

Exemple simple d'un component preact
*/

import { render, h } from "preact";
import { useState } from "preact/hooks";

const Counter = () => {
  const [counter, setCounter] = useState(0);

  return (
    <div>
      <button
        type="button"
        className="btn btn-warning"
        onClick={() => setCounter(counter - 1)}
      >
        Decrementer
      </button>
      <button
        type="button"
        className="btn btn-success"
        onClick={() => setCounter(counter + 1)}
      >
        Incrémenter
      </button>
      <div>{counter}</div>
    </div>
  );
};

renderPreact(Counter, 'app-counter')

/**
 * render.js
 */
import { render, h } from "preact";

export const renderPreact = (Component, attribute) => {
  const elements = document.querySelectorAll(`[${attribute}]`);

  elements.forEach(function (element) {
    const data = element?.dataset;

    render(<Component {...data} />, element, element?.firstChild);
  });
};
 
/**
 * Utilisation dans un view twig
 * <div app-counter></div>
 * 
 * Ceci va être transformer en component jsx
 */
/**
 * Architecture du fichier
 * assets/js
 *  -> counter.jsx
 *  -> render.js
 *  -> index.js
 * 
 * Sur index.js on importe le custom component
 * import './counter'
 */
